@model SmartHome.Web.Models.TemperatureMeasurement.TemperatureMeasurementViewModel

@{
    ViewBag.Header = "Temperature measurement";
}

@{
    bool disableFields = !Model.CanEdit;
}

<div asp-validation-summary="All"></div>

<section class="control-section form-section">
    @if (!disableFields && !Model.IsCreatePage)
    {
        <div class="form-group">
            <a href="@Url.Action("Delete", new {id = Model.Model.Id})">
                <ejs-button id="delete-button" content="Delete"></ejs-button>
            </a>
        </div>
    }

    <form method="post" class="section">
        <input type="hidden" asp-for="Model.Id"/>
        <div class="form-group">
            <ejs-numerictextbox ejs-for="Model.Temperature" id="temperature" placeholder="Temperature"
                                            floatLabelType="Auto" readonly="@disableFields"></ejs-numerictextbox>
        </div>
        <div class="form-group">
            <ejs-dropdownlist id="place" ejs-for="Model.PlaceId" dataSource="@Model.Places" placeholder="Place" floatLabelType="Auto" readonly="@disableFields">
                <e-dropdownlist-fields text="Name" value="Id"></e-dropdownlist-fields>
            </ejs-dropdownlist>
        </div>
        <div class="form-group">
            <ejs-dropdownlist id="sensor" ejs-for="Model.SensorId" dataSource="@Model.Sensors" placeholder="Sensor" floatLabelType="Auto" readonly="@disableFields">
                <e-dropdownlist-fields text="Name" value="Id"></e-dropdownlist-fields>
            </ejs-dropdownlist>
        </div>
        <div class="form-group">
            <ejs-datetimepicker id="measurement-date-time" ejs-for="Model.MeasurementDateTime" placeholder="Measurement date time" floatLabelType="Auto" readonly="@disableFields"></ejs-datetimepicker>
        </div>
        @if (!disableFields)
        {
            <ejs-button id="button" type="submit" content="Submit" cssClass="e-primary"></ejs-button>
        }
    </form>
</section>