@using SmartHome.DomainCore.Data
@model SmartHome.Web.Models.Statistics.StatisticsViewModel

@{
    ViewBag.Header = "Statistics";
}

<section class="small-layout">
    <ejs-button id="filter-button" content="Apply filter" cssClass="e-primary"></ejs-button>
    <div class="section">
        <div class="form-group">
                <ejs-datetimepicker id="measurement-date-time-from" ejs-for="Filter.DateFrom" placeholder="Date from" floatLabelType="Auto"></ejs-datetimepicker>
                <ejs-datetimepicker id="measurement-date-time-to" ejs-for="Filter.DateTo" placeholder="Date to" floatLabelType="Auto"></ejs-datetimepicker>
            </div>
            <div class="form-group">
                <enum-dropdownlist id="group-by" enum-type="@typeof(GroupByType)" placeholder="Group By"
                                   floatLabelType="Auto" change="changeGroupByTypeValue"
                                   showClearButton="true" ejs-for="Filter.GroupBy">
                </enum-dropdownlist>
            </div>
    </div>
</section>

<h2>Temperature</h2>
<section class="layout-large section">
    <ejs-chart id="temperature-chart-inside" resized="resize" title="Inside">
        <e-chart-tooltipsettings enable="true">
        </e-chart-tooltipsettings>
        <e-chart-primaryxaxis id="temperature-xaxis-inside" valueType="DateTime"
                              labelFormat="dd.MM.yyyy"
                              intervalType="Auto"
                              edgeLabelPlacement="Shift">
            <e-majorgridlines width="0"></e-majorgridlines>
        </e-chart-primaryxaxis>
        <e-chart-primaryyaxis id="temperature-yaxis-inside" labelFormat="{value}°C">
            <e-linestyle width="0"></e-linestyle>
            <e-majorticklines width="0"></e-majorticklines>
        </e-chart-primaryyaxis>
        <e-chart-chartarea>
            <e-chartarea-border width="0"></e-chartarea-border>
        </e-chart-chartarea>
    </ejs-chart>
    <ejs-chart id="temperature-chart-outside" resized="resize" title="Outside">
            <e-chart-tooltipsettings enable="true">
            </e-chart-tooltipsettings>
            <e-chart-primaryxaxis id="temperature-xaxis-outside" valueType="DateTime"
                                  labelFormat="dd.MM.yyyy"
                                  intervalType="Auto"
                                  edgeLabelPlacement="Shift">
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis id="temperature-yaxis-outside" labelFormat="{value}°C">
                <e-linestyle width="0"></e-linestyle>
                <e-majorticklines width="0"></e-majorticklines>
            </e-chart-primaryyaxis>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
        </ejs-chart>
</section>

<script>
    function sendAjaxRequest(chart, requestUrl) {
        let ajax = new ej.base.Ajax(requestUrl, "GET");
        ajax.send();
        ajax.onSuccess = function (data) {
            data = JSON.parse(data);
            chart.series = [];
            for (let i = 0; i < data.length; i++) {
                chart.addSeries([{
                    dataSource: data[i].values,
                    width: 2,
                    type: "@Syncfusion.EJ2.Charts.ChartSeriesType.Line",
                    xName: "measurementDateTime",
                    yName: "value",
                    name: data[i].placeName,
                    marker: {
                        visible: true,
                        height: 10,
                        width: 10
                    }
                }]);
            }
            
            chart.refresh();
        };
    }
    
    function createAndSendAjaxRequest(chart, isInside) {
        let dateFrom = $("#measurement-date-time-from").val();
        let dateTo = $("#measurement-date-time-to").val();
        let groupBy = $("#group-by").val();
        
        let parametrizedRequestUrl = "@Url.Action("StatisticsDataSource")";
        let parameters = "?dateFrom=" + dateFrom
                                     + "&dateTo=" + dateTo + "&groupBy=" + groupBy;
        // TODO: update url
        // window.history.pushState({ dateFrom: dateFrom, groupBy: groupBy }, "SmartHome", window.location.pathname);
        
        if (isInside !== null) {
            parameters += "&isInside=" + isInside
        }
        
        parametrizedRequestUrl += parameters;
        
        sendAjaxRequest(chart, parametrizedRequestUrl);
    }
    
    function changeGroupByTypeValue(e) {
        let newItem = e.itemData;
        // if there is no new Item (has been changed to default) => reset to enabled true
        // otherwise false
        enabledMeasurementFiltering = newItem === null;
        document.getElementById("measurement-date-time-from").ej2_instances[0].enabled = enabledMeasurementFiltering;
        document.getElementById("measurement-date-time-to").ej2_instances[0].enabled = enabledMeasurementFiltering;
    }
    
    let resize = function(sender) {
        let chart = sender.chart;
        chart.refresh();
    };
    
    $(document).ready(function() {
        let tempChartInside = document.getElementById("temperature-chart-inside").ej2_instances[0];
        let tempChartOutside = document.getElementById("temperature-chart-outside").ej2_instances[0];
        
        let button = document.getElementById("filter-button");
        button.addEventListener("click", function(e){
            createAndSendAjaxRequest(tempChartInside, true);
            createAndSendAjaxRequest(tempChartOutside, false);
            
            // TODO: change label format of plot according to
        });
        
        createAndSendAjaxRequest(tempChartInside, true);
        createAndSendAjaxRequest(tempChartOutside, false);
    });
    
    
</script>
